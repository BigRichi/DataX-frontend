{"ast":null,"code":"var _jsxFileName = \"/Users/richardadule/Development/Flatiron/projects/DataX/frontend/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport '../App.css';\nimport { useState, useEffect } from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport { Box } from \"@chakra-ui/react\";\nimport NavBar from './NavBar';\nimport DashboardMain from './DashboardMain';\nimport DashboardRocket from './DashboardRocket';\nimport DashboardLaunch from './DashboardLaunch';\nimport DashboardLaunchpad from './DashboardLaunchpad';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // ---------- States ---------- //\n  const [allRockets, setAllRockets] = useState([]);\n  const [allLaunches, setAllLaunches] = useState([]);\n  const [allLaunchpads, setAllLaunchpads] = useState([]); // const [allComments, setAllComments] = useState([])\n\n  const [singleRocket, setSingleRocket] = useState({});\n  const [singleLaunch, setSingleLaunch] = useState({});\n  const [singleLaunchpad, setSingleLaunchpad] = useState({}); // ---------- useEffects that will pull all Rockets Launches and Launchpads ---------- //\n  //*  Setting State here for Rockets Launches and Launchpads   *//\n\n  useEffect(() => {\n    fetch(\"http://localhost:3000/rockets\").then(resp => resp.json()).then(rocketsArr => setAllRockets(rocketsArr));\n  }, []);\n  useEffect(() => {\n    fetch(\"http://localhost:3000/launches\").then(resp => resp.json()).then(launchesArr => setAllLaunches(launchesArr));\n  }, []);\n  useEffect(() => {\n    fetch(\"http://localhost:3000/launchpads\").then(resp => resp.json()).then(launchpadsArr => setAllLaunchpads(launchpadsArr));\n  }, []); // ---------- New Comment form handler ---------- //\n\n  const handelForm = e => {\n    e.preventDefault();\n    const p = e.target.present.value;\n\n    const present = () => {\n      if (p === \"true\") {\n        return Boolean(p);\n      } else {\n        return Boolean(!p);\n      }\n    };\n\n    const newComment = {\n      launch_id: singleLaunch.id,\n      reviewer: e.target.reviewer.value,\n      present_at_launch: present(),\n      comment: e.target.comment.value\n    };\n    fetch(\"http://localhost:3000/launch_reviews\", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'Application/json',\n        'Accept': 'Application/json'\n      },\n      body: JSON.stringify(newComment)\n    }).then(resp => resp.json()).then(launch => setSingleLaunch(launch));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {\n      allRockets: allRockets,\n      allLaunches: allLaunches,\n      allLaunchpads: allLaunchpads,\n      setSingleRocket: setSingleRocket,\n      setSingleLaunch: setSingleLaunch,\n      setSingleLaunchpad: setSingleLaunchpad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      alignContent: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/rocket\",\n          children: /*#__PURE__*/_jsxDEV(DashboardRocket, {\n            singleRocket: singleRocket\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/launch\",\n          children: /*#__PURE__*/_jsxDEV(DashboardLaunch, {\n            singleLaunch: singleLaunch // allComments={allComments}\n            ,\n            handelForm: handelForm\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/launchpad\",\n          children: /*#__PURE__*/_jsxDEV(DashboardLaunchpad, {\n            singleLaunchpad: singleLaunchpad\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          children: /*#__PURE__*/_jsxDEV(DashboardMain, {\n            allRockets: allRockets,\n            allLaunches: allLaunches,\n            allLaunchpads: allLaunchpads\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"7rF1nG2JClvP0quGdejb0g3Fvtg=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/richardadule/Development/Flatiron/projects/DataX/frontend/src/components/App.js"],"names":["useState","useEffect","Switch","Route","Box","NavBar","DashboardMain","DashboardRocket","DashboardLaunch","DashboardLaunchpad","App","allRockets","setAllRockets","allLaunches","setAllLaunches","allLaunchpads","setAllLaunchpads","singleRocket","setSingleRocket","singleLaunch","setSingleLaunch","singleLaunchpad","setSingleLaunchpad","fetch","then","resp","json","rocketsArr","launchesArr","launchpadsArr","handelForm","e","preventDefault","p","target","present","value","Boolean","newComment","launch_id","id","reviewer","present_at_launch","comment","method","headers","body","JSON","stringify","launch"],"mappings":"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","sourcesContent":["import '../App.css';\nimport {useState, useEffect} from \"react\"\nimport { Switch, Route } from \"react-router-dom\"\nimport { Box } from \"@chakra-ui/react\"\nimport NavBar from './NavBar'\nimport DashboardMain from './DashboardMain'\nimport DashboardRocket from './DashboardRocket'\nimport DashboardLaunch from './DashboardLaunch'\nimport DashboardLaunchpad from './DashboardLaunchpad'\n\nfunction App() {\n\n// ---------- States ---------- //\n  const [allRockets, setAllRockets] = useState([])\n  const [allLaunches, setAllLaunches] = useState([])\n  const [allLaunchpads, setAllLaunchpads] = useState([])\n\n  // const [allComments, setAllComments] = useState([])\n\n  const [singleRocket, setSingleRocket] = useState({})\n  const [singleLaunch, setSingleLaunch] = useState({})\n  const [singleLaunchpad, setSingleLaunchpad] = useState({})\n\n// ---------- useEffects that will pull all Rockets Launches and Launchpads ---------- //\n//*  Setting State here for Rockets Launches and Launchpads   *//\n  useEffect(() => {\n      fetch(\"http://localhost:3000/rockets\")\n      .then(resp => resp.json())\n      .then(rocketsArr => setAllRockets(rocketsArr))\n  }, [])\n  useEffect(() => {\n      fetch(\"http://localhost:3000/launches\")\n      .then(resp => resp.json())\n      .then(launchesArr => setAllLaunches(launchesArr))\n  }, [])\n  useEffect(() => {\n      fetch(\"http://localhost:3000/launchpads\")\n      .then(resp => resp.json())\n      .then(launchpadsArr => setAllLaunchpads(launchpadsArr))\n  }, [])\n\n// ---------- New Comment form handler ---------- //\nconst handelForm = (e) => {\n    e.preventDefault()\n    const p = e.target.present.value\n    const present = () => {\n        if (p === \"true\"){\n            return Boolean(p)\n        }else{\n            return Boolean(!p)\n        }\n    }\n    \n    const newComment = {\n        launch_id: singleLaunch.id,\n        reviewer: e.target.reviewer.value,\n        present_at_launch: present(),\n        comment: e.target.comment.value\n    }\n\n    fetch(\"http://localhost:3000/launch_reviews\",{\n        method: 'POST',\n        headers: {\n            'Content-Type': 'Application/json',\n            'Accept': 'Application/json'\n        },\n        body: JSON.stringify(newComment)\n    })\n    .then(resp => resp.json())\n    .then(launch => setSingleLaunch(launch))\n}\n\n  return (\n    <Box>\n      <NavBar \n        allRockets={allRockets} \n        allLaunches={allLaunches}\n        allLaunchpads={allLaunchpads}\n        setSingleRocket={setSingleRocket}\n        setSingleLaunch={setSingleLaunch}\n        setSingleLaunchpad={setSingleLaunchpad}\n      />\n      <Box alignContent=\"center\">\n        <Switch>\n          <Route path=\"/rocket\">\n            <DashboardRocket\n              singleRocket={singleRocket}\n            />\n          </Route>\n          <Route path=\"/launch\">\n            <DashboardLaunch\n              singleLaunch={singleLaunch}\n              // allComments={allComments}\n              handelForm={handelForm}\n            />\n          </Route>\n          <Route path=\"/launchpad\">\n            <DashboardLaunchpad\n              singleLaunchpad={singleLaunchpad}\n            />\n          </Route>\n          <Route path=\"/\">\n            <DashboardMain\n              allRockets={allRockets} \n              allLaunches={allLaunches}\n              allLaunchpads={allLaunchpads}\n            />\n          </Route>\n        </Switch>\n      </Box>\n    </Box>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}